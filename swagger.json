{
  "openapi": "3.0.0",
  "info": {
    "title": "API MJ Inventory Control",
    "description": "Esta API tem como objetivo o controle de estoque completo de seu negócio.",
    "termsOfService": "http://localhost:3333/terms",
    "contact": {
      "email": "mjworks2020@outlook.com"
    },
    "version": "1.0.0"
  },
  "paths": {
    "tags": ["Usuários"],
    "/v1/user": {
      "post": {
        "description": "Criar usuário",
        "requestBody": {
          "description": "Dados necessários para a criação de um novo usuário",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUser"
                }
              }
            }
          },
          "400": {
            "description": "Erro"
          }
        }
      }
    },
    "/v1/session": {
      "post": {
        "description": "Logar e autenticar usuário",
        "requestBody": {
          "description": "Dados necessários para o login e autenticação de um usuário",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAuthUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAuthUser"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me?user_id={user_id}": {
      "get": {
        "description": "Busca de um usuário por id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "Id do usuário",
            "required": "true",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUser"
                }
              }
            }
          },
          "400": {
            "description": "Erro"
          }
        }
      }
    },
    "/v1/user/remove?user_id={user_id}": {
      "delete": {
        "description": "Remover usuário",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "Id do usuário",
            "required": "true",
            "type": "string",
            "format": "uuid"
          }
        ],
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResponseDeleteUser"
              }
            }
          }
        }
      }
    },
    "/v1/category": {
      "post": {
        "description": "Criar nova categoria",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Dados de entrada necessários para a criação de uma nova categoria",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateCategory"
                }
              }
            }
          }
        }
      }
    },
    "/v1/category/edit?category_id={category_id}": {
      "put": {
        "description": "Editar nome de uma categoria",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "Id da categoria",
            "required": "true",
            "type": "string",
            "format": "uuid"
          }
        ],
        "requestBody": {
          "description": "Dados de entrada necessários para editar o nome de uma categoria",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateCategory"
                }
              }
            }
          }
        }
      }
    },
    "/v1/category/all": {
      "get": {
        "description": "Lista todas as categorias",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetAllCategories"
                }
              }
            }
          }
        }
      }
    },
    "/v1/category/remove?category_id={category_id}": {
      "delete": {
        "description": "Remover uma categoria pelo id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "Id da categoria",
            "required": "true",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDeleteCategory"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RequestCreateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ResponseCreateUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "RequestAuthUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ResponseAuthUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "RequestCreateCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ResponseCreateCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ResponseDeleteUser": {
        "type": "object"
      },
      "ResponseGetAllCategories": {
        "type": "array",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ResponseDeleteCategory": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "description": "Autentificação utilizando JWT",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
